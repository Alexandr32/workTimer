* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: system-ui;
}

:root {
    --border: #191919;
    --textColorDarkThem: #fff;
    --backgroundColorDarkThem: #2f363e;
    --backgroundColorLightThem: white;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh; /* Нужно переделать на растягивание по середине */
    flex-direction: column;
    transition: all 1s ease;
}

body:not(.light-them) {
    background: var(--backgroundColorDarkThem);
    color: var(--textColorDarkThem);
}

button {
    padding: 0;
    border: none;
    font: inherit;
    color: inherit;
    background-color: transparent;
    cursor: pointer;
    transition: all 1s ease;
}

.timer {
    border-radius: 20px;
    margin: 50px;
    border: var(--border) solid;
    z-index: 1000;
    background: var(--backgroundColorLightThem);
    transition: all 1s ease;
}

.timer:not(.light-them) {
    background: var(--backgroundColorDarkThem);
    color: var(--textColorDarkThem);;
}

.text-label {
    font-size: 36px;
    cursor: pointer;
    text-align: center;
}

.time {
    display: flex;
    gap: 40px; /* Пробелы */
}

.name {
    z-index: 200;
}

.title {
    font-size: 35px;
    z-index: 200;
}

.circle {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 200px;
    height: 200px;
    flex-direction: column;
    transition: all 1s ease;
    cursor: pointer;
}

.svg {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    fill: transparent;
    stroke-width: 4;
    stroke: var(--border);
    transform: rotate(270deg);
}

.red {
    stroke: #ff2972;
    stroke-dasharray: 440;
}

.green {
    stroke: #04fc43;
    stroke-dasharray: 440;
}

.yellow {
    stroke: yellow;
    stroke-dasharray: 440;
}

.dots {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    z-index: 300;
}

.dots:before {
    content: '';
    top: 22px;
    position: absolute;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    z-index: 300;
}

.dot-red:before {
    background: #ff2972;
    box-shadow: 0 0 20px #ff2972;
}

.dot-green:before {
    background: #04fc43;
    box-shadow: 0 0 20px #04fc43;
}

.dot-yellow:before {
    background: yellow;
    box-shadow: 0 0 20px yellow;
}

.drop {
    position: absolute;
    height: 300px;
    background: linear-gradient(transparent, cornflowerblue);
    border-bottom-left-radius: 15px;
    border-bottom-right-radius: 15px;
    animation: animate-rain 10s linear infinite;
}

.drop:nth-child(3n+1) {
    background: linear-gradient(transparent, dodgerblue);
}

.drop:nth-child(3n+2) {
    background: linear-gradient(transparent, cornflowerblue);
}

.drop:nth-child(3n+3) {
    background: linear-gradient(transparent, darkslateblue);
}

@keyframes animate-rain {
    0% {
        transform: translateY(-100vh);
    }
    100% {
        transform: translateY(calc(100vh + 300px));
    }
}

.settings {
    display: flex;
    z-index: 900;
    border: var(--border) solid;
    position: absolute;
    top: 0;
    left: 0;
    border-bottom-right-radius: 15px;
    width: 200px;
    height: 30px;
    justify-content: space-around;
    align-items: center;
    font-size: 13px;
    font-weight: 100;
    transition: all 1s ease;
    background: var(--backgroundColorLightThem);
}

.settings > span {
    transition: all 1s ease;
}

.settings:not(.light-them) {
    background: var(--backgroundColorDarkThem);
    color: var(--textColorDarkThem);
}

.dialog-time {
    border: var(--border) solid;
    position: absolute;
    top: 35px;
    left: 0;
    z-index: 900;
    font-size: 13px;
    border-radius: 15px;
    padding: 10px;
    transition: all 1s ease;
    background: var(--backgroundColorLightThem);
}

.dialog-time:not(.light-them) {
    background: var(--backgroundColorDarkThem);
    color: var(--textColorDarkThem);
}

.dialog-time input {
    transition: all 1s ease;
}

.dialog-time:not(.light-them) input {
    background: var(--backgroundColorDarkThem);
    color: var(--textColorDarkThem);
}

.input-time {
    display: flex;
    gap: 20px;
    justify-content: space-between;
}

.dialog-button {
    display: flex;
    justify-content: space-around;
    align-items: center;
    margin-top: 10px;
}

@media screen and (max-width: 730px) {
    .time {
        display: flex;
        gap: 40px;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
}